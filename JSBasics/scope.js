//scopes : accessibility or visibility

//global

//block : only inside the block is visible for example : let and const is block scope
// var is global and functional scope


//function : var is not leaked in the function

// In funciton the var is not leaked
function scope(){ 
    let x= 10
    const y=10
    var z=20 

    console.log(x)
    console.log(y)
    console.log(z)
}

scope()
console.log('outside scope', z)


lexical

let x = 120; // globle scope 

function parent (){
    let x = "Parent Variable"  //scope change
    //scope of parent

    function child(){
        console.log(x) 

        function children(){
            console.log(x) //scope can be accessed from anywhere
        }
        children() //call children from child


// lexical scope is formed when parent function have another functions
// scope change : it see the scope of inside first and then it travel to next scope
























































































































































































































































































































































































































































































    }
    child() //call child from parent
}

parent() //parent call 

